The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

from 2-matrix_divided import matrix_divided.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Empty
    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Empty matrix
    >>> matrix_divided(, 1)
    Traceback (most recent call last):
    SyntaxError: invalid syntax

Float
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Empty div
    >>> matrix_divided([1, 2, 3])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Empty all
    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Each row of the matrix must have the same size
    >>> matrix = [[1, 2], [3, 4, 5]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

division by zero
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

div must be a number
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, "holberton")
    Traceback (most recent call last):
    TypeError: div must be a number
